{"ast":null,"code":"import _classCallCheck from \"/Users/jacob/Documents/newnewcapstone/project/Data Visualization/Program/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jacob/Documents/newnewcapstone/project/Data Visualization/Program/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jacob/Documents/newnewcapstone/project/Data Visualization/Program/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jacob/Documents/newnewcapstone/project/Data Visualization/Program/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jacob/Documents/newnewcapstone/project/Data Visualization/Program/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jacob/Documents/newnewcapstone/project/Data Visualization/Program/my-app/src/pages/Overview.js\";\nimport React, { Component } from 'react';\nimport List from '../components/List.js';\n\nvar Overview =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Overview, _Component);\n\n  function Overview(props) {\n    var _this;\n\n    _classCallCheck(this, Overview);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Overview).call(this, props));\n    _this.state = {\n      items: [{\n        to: \"/graph\",\n        label: \"item 1\"\n      }, {\n        to: \"/graph\",\n        label: \"item 2\"\n      }],\n      sensors: []\n    };\n    return _this;\n  }\n\n  _createClass(Overview, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"here\");\n      fetch('http://localhost:5000/updateSensors').then(function (response) {\n        return console.log(response.json);\n      }); //this.setState({sensors: data.sensors}\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //console.log(this.state.sensors)\n      var items = [];\n\n      for (var sensor in this.state.sensors) {\n        items.push({\n          \"to\": \"/graph\" + \"/\" + sensor.serial,\n          \"label\": sensor.name\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(List, {\n        items: items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Overview;\n}(Component);\n\nexport default Overview;","map":{"version":3,"sources":["/Users/jacob/Documents/newnewcapstone/project/Data Visualization/Program/my-app/src/pages/Overview.js"],"names":["React","Component","List","Overview","props","state","items","to","label","sensors","console","log","fetch","then","response","json","sensor","push","serial","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;IAEMC,Q;;;;;AAEJ,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,kFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,EAAE,EAAE,QADN;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADK,EAKL;AACED,QAAAA,EAAE,EAAE,QADN;AAEEC,QAAAA,KAAK,EAAE;AAFT,OALK,CADI;AAWXC,MAAAA,OAAO,EAAE;AAXE,KAAb;AAHgB;AAiBjB;;;;wCAEkB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAC,MAAAA,KAAK,CAAC,qCAAD,CAAL,CAA6CC,IAA7C,CAAkD,UAAAC,QAAQ;AAAA,eAAIJ,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACC,IAArB,CAAJ;AAAA,OAA1D,EAFiB,CAGjB;AACD;;;6BAEQ;AAEP;AAEA,UAAMT,KAAK,GAAG,EAAd;;AAEA,WAAK,IAAIU,MAAT,IAAmB,KAAKX,KAAL,CAAWI,OAA9B,EAAuC;AACrCH,QAAAA,KAAK,CAACW,IAAN,CAAW;AAAC,gBAAM,WAAW,GAAX,GAAiBD,MAAM,CAACE,MAA/B;AAAuC,mBAASF,MAAM,CAACG;AAAvD,SAAX;AACD;;AAGD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EA3CoBL,S;;AA8CvB,eAAeE,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport List from '../components/List.js'\n\nclass Overview extends Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      items: [\n        {\n          to: \"/graph\",\n          label: \"item 1\"\n        },\n        {\n          to: \"/graph\",\n          label: \"item 2\"\n        },\n      ],\n      sensors: [\n      ]\n    }\n  }\n\n  componentDidMount(){\n    console.log(\"here\")\n    fetch('http://localhost:5000/updateSensors').then(response => console.log(response.json))\n    //this.setState({sensors: data.sensors}\n  }\n\n  render() {\n\n    //console.log(this.state.sensors)\n\n    const items = []\n\n    for (var sensor in this.state.sensors) {\n      items.push({\"to\": \"/graph\" + \"/\" + sensor.serial, \"label\": sensor.name})\n    }\n\n\n    return (\n      <div>\n        <List items={items}/>\n      </div>\n    );\n  }\n}\n\nexport default Overview;\n"]},"metadata":{},"sourceType":"module"}