{"ast":null,"code":"var _jsxFileName = \"/Users/jacob/Documents/CapstoneProject/project/Data Visualization/Program/my-app/src/pages/Process.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing.unit * 3,\n      overflowX: \"auto\"\n    },\n    table: {\n      minWidth: 700\n    }\n  };\n}; //Variables \n\n\nvar id = 0;\n\nfunction createData(name, sync, splitS, splitE, bitTime, bitMethod, sensor, lastQC, lastMerge, lastExport, lastProcess, action) {\n  id += 1;\n  return {\n    id: id,\n    name: name,\n    sync: sync,\n    splitS: splitS,\n    splitE: splitE,\n    bitTime: bitTime,\n    bitMethod: bitMethod,\n    sensor: sensor,\n    lastQC: lastQC,\n    lastMerge: lastMerge,\n    lastExport: lastExport,\n    lastProcess: lastProcess,\n    action: action\n  };\n} //What is shown each rows. Dumb data. \n//The options are buttons.\n\n\nvar rows = [createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, \"Option\"), \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, \"Option\")), createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, \"Option\"), \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, \"Option\")), createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, \"Option\"), \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, \"Option\")), createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, \"Option\"), \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, \"Option\")), createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, \"Option\"), \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, \"Option\")), createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, \"Option\"), \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, \"Option\")), createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, \"Option\"), \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, \"Option\")), createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, \"Option\"), \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, \"Option\")), createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, \"Option\"), \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, \"Option\")), createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, \"Option\"), \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, \"Option\")), createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, \"Option\"), \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, \"Option\")), createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \"Option\"), \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", React.createElement(\"button\", {\n  onclick: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \"Option\"))]; //Properties\n\nfunction SimpleTable(props) {\n  var classes = props.classes;\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    id: \"tabletop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Name\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Sync(s)\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Split Start\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Split End\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Bit Time (Min)\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Bin Method\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Sensor Params\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Last QC\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Last Merge\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Last Export\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Last Processing\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Action\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, rows.map(function (row) {\n    return React.createElement(TableRow, {\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, row.name), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, row.sync), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, row.splitS), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, row.splitE), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, row.bitTime), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, row.bitMethod), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, row.sensor), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, row.lastQC), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, row.lastMerge), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, row.lastExport), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, row.lastProcess), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, row.action));\n  }))));\n}\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SimpleTable);","map":{"version":3,"sources":["/Users/jacob/Documents/CapstoneProject/project/Data Visualization/Program/my-app/src/pages/Process.js"],"names":["React","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","styles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth","id","createData","name","sync","splitS","splitE","bitTime","bitMethod","sensor","lastQC","lastMerge","lastExport","lastProcess","action","rows","SimpleTable","props","classes","map","row","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 700\n  }\n});\n\n//Variables \n\nlet id = 0;\nfunction createData(name, sync, splitS, splitE, bitTime, bitMethod, sensor, lastQC, lastMerge, lastExport, lastProcess, action) {\n  id += 1;\n  return {id,name, sync, splitS, splitE, bitTime, bitMethod, sensor, lastQC, lastMerge, lastExport, lastProcess, action};\n}\n\n//What is shown each rows. Dumb data. \n//The options are buttons.\n\nconst rows = [\n  createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", <button onclick>Option</button>, \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", <button onclick>Option</button>),\n  createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", <button onclick>Option</button>, \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", <button onclick>Option</button>),\n  createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", <button onclick>Option</button>, \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", <button onclick>Option</button>),\n  createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", <button onclick>Option</button>, \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", <button onclick>Option</button>),\n  createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", <button onclick>Option</button>, \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", <button onclick>Option</button>),\n  createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", <button onclick>Option</button>, \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", <button onclick>Option</button>),\n  createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", <button onclick>Option</button>, \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", <button onclick>Option</button>),\n  createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", <button onclick>Option</button>, \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", <button onclick>Option</button>),\n  createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", <button onclick>Option</button>, \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", <button onclick>Option</button>),\n  createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", <button onclick>Option</button>, \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", <button onclick>Option</button>),\n  createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", <button onclick>Option</button>, \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", <button onclick>Option</button>),\n  createData(\"Sensor Name\", 10, 90, 120, 1, \"SB\", <button onclick>Option</button>, \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", \"09/12/18 12:10\", <button onclick>Option</button>)\n\n   \n];\n\n//Properties\nfunction SimpleTable(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow id=\"tabletop\">\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Sync(s)</TableCell>\n            <TableCell align=\"right\">Split Start</TableCell>\n            <TableCell align=\"right\">Split End</TableCell>\n            <TableCell align=\"right\">Bit Time (Min)</TableCell>\n            <TableCell align=\"right\">Bin Method</TableCell>\n            <TableCell align=\"right\">Sensor Params</TableCell>\n            <TableCell align=\"right\">Last QC</TableCell>\n            <TableCell align=\"right\">Last Merge</TableCell>\n            <TableCell align=\"right\">Last Export</TableCell>\n            <TableCell align=\"right\">Last Processing</TableCell>\n            <TableCell align=\"right\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.sync}</TableCell>\n              <TableCell align=\"right\">{row.splitS}</TableCell>\n              <TableCell align=\"right\">{row.splitE}</TableCell>\n              <TableCell align=\"right\">{row.bitTime}</TableCell>\n              <TableCell align=\"right\">{row.bitMethod}</TableCell>\n              <TableCell align=\"right\">{row.sensor}</TableCell>\n              <TableCell align=\"right\">{row.lastQC}</TableCell>\n              <TableCell align=\"right\">{row.lastMerge}</TableCell>\n              <TableCell align=\"right\">{row.lastExport}</TableCell>\n              <TableCell align=\"right\">{row.lastProcess}</TableCell>\n              <TableCell align=\"right\">{row.action}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SimpleTable);\n"]},"metadata":{},"sourceType":"module"}