{"ast":null,"code":"import _classCallCheck from \"/Users/jacob/Desktop/ftdl/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jacob/Desktop/ftdl/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jacob/Desktop/ftdl/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jacob/Desktop/ftdl/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jacob/Desktop/ftdl/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jacob/Desktop/ftdl/my-app/src/pages/Graph.js\";\nimport React, { Component } from 'react';\nimport Highcharts from 'highcharts';\nimport { HighchartsChart, Chart, withHighcharts, XAxis, YAxis, Title, Subtitle, Legend, LineSeries } from 'react-jsx-highcharts';\n\nvar Graph =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Graph, _Component);\n\n  function Graph(props) {\n    var _this;\n\n    _classCallCheck(this, Graph);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Graph).call(this, props));\n    var _this$state = _this.state,\n        data1 = _this$state.data1,\n        data2 = _this$state.data2;\n    var now = Date.now();\n    _this.state = {\n      data1: createRandomData(now),\n      data2: createRandomData(now),\n      liveUpdate: false\n    };\n    return _this;\n  }\n\n  _createClass(Graph, [{\n    key: \"handleStartLiveUpdate\",\n    value: function handleStartLiveUpdate(e) {\n      e && e.preventDefault();\n      this.setState({\n        liveUpdate: window.setInterval(this.updateLiveData, 1000)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          data1 = _this$state2.data1,\n          data2 = _this$state2.data2;\n      return React.createElement(HighchartsChart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Dynamically updating data\"), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Legend.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Legend\")), React.createElement(XAxis, {\n        type: \"datetime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(XAxis.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Time\")), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(YAxis.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Pressure (m)\"), React.createElement(LineSeries, {\n        name: \"Sensor 1\",\n        data: data1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(LineSeries, {\n        name: \"Sensor 2\",\n        data: data2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Graph;\n}(Component);\n\nexport default Graph;","map":{"version":3,"sources":["/Users/jacob/Desktop/ftdl/my-app/src/pages/Graph.js"],"names":["React","Component","Highcharts","HighchartsChart","Chart","withHighcharts","XAxis","YAxis","Title","Subtitle","Legend","LineSeries","Graph","props","state","data1","data2","now","Date","createRandomData","liveUpdate","e","preventDefault","setState","window","setInterval","updateLiveData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SACEC,eADF,EACmBC,KADnB,EAC0BC,cAD1B,EAC0CC,KAD1C,EACiDC,KADjD,EACwDC,KADxD,EAC+DC,QAD/D,EACyEC,MADzE,EACiFC,UADjF,QAEO,sBAFP;;IAIMC,K;;;;;AAEJ,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,+EAAMA,KAAN;AADgB,sBAGS,MAAKC,KAHd;AAAA,QAGRC,KAHQ,eAGRA,KAHQ;AAAA,QAGDC,KAHC,eAGDA,KAHC;AAKhB,QAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;AACA,UAAKH,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEI,gBAAgB,CAACF,GAAD,CADZ;AAEXD,MAAAA,KAAK,EAAEG,gBAAgB,CAACF,GAAD,CAFZ;AAGXG,MAAAA,UAAU,EAAE;AAHD,KAAb;AANgB;AAYjB;;;;0CAEsBC,C,EAAG;AACxBA,MAAAA,CAAC,IAAIA,CAAC,CAACC,cAAF,EAAL;AACA,WAAKC,QAAL,CAAc;AACZH,QAAAA,UAAU,EAAEI,MAAM,CAACC,WAAP,CAAmB,KAAKC,cAAxB,EAAwC,IAAxC;AADA,OAAd;AAGD;;;6BAEQ;AAAA,yBAEkB,KAAKZ,KAFvB;AAAA,UAECC,KAFD,gBAECA,KAFD;AAAA,UAEQC,KAFR,gBAEQA,KAFR;AAIP,aACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAHF,EAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CALF,EASE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CATF,EAaE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEI,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAC,UAAjB;AAA4B,QAAA,IAAI,EAAED,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAC,UAAjB;AAA4B,QAAA,IAAI,EAAEC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAbF,CADF;AAqBD;;;;EAhDiBf,S;;AAmDpB,eAAeW,KAAf","sourcesContent":["import React, { Component } from 'react'\nimport Highcharts from 'highcharts';\nimport {\n  HighchartsChart, Chart, withHighcharts, XAxis, YAxis, Title, Subtitle, Legend, LineSeries\n} from 'react-jsx-highcharts';\n\nclass Graph extends Component {\n\n  constructor(props){\n    super(props)\n\n    const { data1, data2 } = this.state;\n\n    const now = Date.now();\n    this.state = {\n      data1: createRandomData(now),\n      data2: createRandomData(now),\n      liveUpdate: false\n    };\n\n  }\n\n  handleStartLiveUpdate (e) {\n    e && e.preventDefault();\n    this.setState({\n      liveUpdate: window.setInterval(this.updateLiveData, 1000)\n    });\n  }\n\n  render() {\n\n    const { data1, data2 } = this.state;\n\n    return (\n      <HighchartsChart>\n        <Chart />\n\n        <Title>Dynamically updating data</Title>\n\n        <Legend>\n          <Legend.Title>Legend</Legend.Title>\n        </Legend>\n\n        <XAxis type=\"datetime\">\n          <XAxis.Title>Time</XAxis.Title>\n        </XAxis>\n\n        <YAxis>\n          <YAxis.Title>Pressure (m)</YAxis.Title>\n            <LineSeries name=\"Sensor 1\" data={data1} />\n            <LineSeries name=\"Sensor 2\" data={data2} />\n          </YAxis>\n      </HighchartsChart>\n    );\n  }\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}