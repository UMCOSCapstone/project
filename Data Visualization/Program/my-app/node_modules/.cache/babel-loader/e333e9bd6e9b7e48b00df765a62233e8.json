{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isEqual } from 'lodash-es';\nimport { Provider } from '../ChartContext';\nimport { validChartTypes } from '../../utils/propTypeValidators';\n\nvar BaseChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BaseChart, _Component);\n\n  function BaseChart(props) {\n    var _this;\n\n    _classCallCheck(this, BaseChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BaseChart).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"initHighcharts\", function () {\n      if (!_this.domNode) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          chartCreationFunc = _this$props.chartCreationFunc,\n          callback = _this$props.callback,\n          polar = _this$props.polar,\n          gauge = _this$props.gauge,\n          children = _this$props.children,\n          rest = _objectWithoutProperties(_this$props, [\"chartCreationFunc\", \"callback\", \"polar\", \"gauge\", \"children\"]);\n\n      var opts = _objectSpread({\n        chart: {},\n        title: {\n          text: null\n        },\n        subtitle: {\n          text: null\n        },\n        legend: {\n          enabled: false\n        },\n        rangeSelector: {\n          enabled: false\n        },\n        navigator: {\n          enabled: false\n        },\n        scrollbar: {\n          enabled: false\n        },\n        tooltip: {\n          enabled: false\n        },\n        credits: {\n          enabled: false\n        },\n        series: [],\n        xAxis: [],\n        yAxis: []\n      }, rest);\n\n      _this.chart = chartCreationFunc(_this.domNode, opts);\n      _this.chart.polar = polar;\n      _this.chart.angular = gauge;\n      callback(_this.chart);\n\n      _this.setState({\n        rendered: true\n      });\n    });\n\n    _this.state = {\n      rendered: false\n    };\n    return _this;\n  }\n\n  _createClass(BaseChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Need to wait for CSS to be applied to parent nodes, or chart is rendered at wrong size\n      window.setTimeout(this.initHighcharts, 0);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var plotOptions = this.props.plotOptions;\n\n      if (isEqual(prevProps.plotOptions, plotOptions) === false && this.chart) {\n        this.chart.update({\n          plotOptions: plotOptions\n        }, true);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.chart) {\n        // Fixes #14\n        window.setTimeout(this.chart.destroy.bind(this.chart), 1);\n        this.chart.__destroyed = true;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          chartType = _this$props2.chartType,\n          children = _this$props2.children;\n      return React.createElement(\"div\", {\n        className: \"chart \".concat(this.props.className),\n        ref: function ref(node) {\n          _this2.domNode = node;\n        }\n      }, this.state.rendered && React.createElement(Provider, {\n        value: {\n          chart: this.chart,\n          chartType: chartType\n        }\n      }, children));\n    }\n  }]);\n\n  return BaseChart;\n}(Component);\n\n_defineProperty(BaseChart, \"defaultProps\", {\n  children: null,\n  className: '',\n  callback: function callback() {}\n});\n\nexport default BaseChart;","map":null,"metadata":{},"sourceType":"module"}