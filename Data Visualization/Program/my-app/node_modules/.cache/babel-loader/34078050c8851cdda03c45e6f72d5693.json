{"ast":null,"code":"import _classCallCheck from \"/Users/jacob/Documents/newnewcapstone/project/Data Visualization/Program/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jacob/Documents/newnewcapstone/project/Data Visualization/Program/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jacob/Documents/newnewcapstone/project/Data Visualization/Program/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jacob/Documents/newnewcapstone/project/Data Visualization/Program/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jacob/Documents/newnewcapstone/project/Data Visualization/Program/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jacob/Documents/newnewcapstone/project/Data Visualization/Program/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jacob/Documents/newnewcapstone/project/Data Visualization/Program/my-app/src/components/Graph.js\";\nimport React, { Component } from 'react';\nimport Highcharts from 'highcharts';\nimport socketIOClient from \"socket.io-client\";\nimport { HighchartsChart, Chart, withHighcharts, XAxis, YAxis, Title, Legend, LineSeries } from 'react-jsx-highcharts';\nimport './Graph.css'; //import { createRandomData, addDataPoint } from '../utils/data-helpers';\n\nvar Graph =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Graph, _Component);\n\n  function Graph(props) {\n    var _this;\n\n    _classCallCheck(this, Graph);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Graph).call(this, props));\n    _this.addDataPoint = _this.addDataPoint.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    var now = Date.now();\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(Graph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var sensorSerial = this.props.match.params.sensorId;\n      var socket = socketIOClient(\"http://localhost:5001/test\");\n      socket.on(\"newnumber\", function (data) {\n        return _this2.addDataPoint(data);\n      });\n    }\n  }, {\n    key: \"addDataPoint\",\n    value: function addDataPoint(data) {\n      if (data.sensorSerial == this.props.match.params.sensorId) {\n        var newData = this.state.data.slice(0);\n        console.log(data.dateTime);\n        newData.push(data.number);\n\n        if (newData.length > 50) {\n          newData.shift();\n        }\n\n        this.setState({\n          data: newData\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const {data} = this.state;\n      var plotOptions = {\n        series: {\n          pointStart: 2010\n        }\n      };\n      return React.createElement(\"div\", {\n        className: \"graph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(HighchartsChart, {\n        plotOptions: plotOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Sensor Data\"), React.createElement(Legend, {\n        layout: \"vertical\",\n        align: \"right\",\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Legend.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Legend\")), React.createElement(XAxis, {\n        type: \"datetime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(XAxis.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Time\")), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(YAxis.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Y-axis\"), React.createElement(LineSeries, {\n        name: \"Channel 1\",\n        data: [1, 2, 3, 4, 5],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Graph;\n}(Component);\n\nexport default withHighcharts(Graph, Highcharts);","map":{"version":3,"sources":["/Users/jacob/Documents/newnewcapstone/project/Data Visualization/Program/my-app/src/components/Graph.js"],"names":["React","Component","Highcharts","socketIOClient","HighchartsChart","Chart","withHighcharts","XAxis","YAxis","Title","Legend","LineSeries","Graph","props","addDataPoint","bind","now","Date","state","data","sensorSerial","match","params","sensorId","socket","on","newData","slice","console","log","dateTime","push","number","length","shift","setState","plotOptions","series","pointStart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Highcharts from 'highcharts';\nimport socketIOClient from \"socket.io-client\";\nimport {\n  HighchartsChart, Chart, withHighcharts, XAxis, YAxis, Title, Legend, LineSeries\n} from 'react-jsx-highcharts';\nimport './Graph.css'\n//import { createRandomData, addDataPoint } from '../utils/data-helpers';\n\nclass Graph extends Component {\n\n  constructor (props) {\n    super(props);\n    this.addDataPoint = this.addDataPoint.bind(this);\n\n    const now = Date.now();\n    this.state = {\n        data: []\n    }\n}\n\ncomponentDidMount() {\n\n    var sensorSerial = this.props.match.params.sensorId\n\n    const socket = socketIOClient(\"http://localhost:5001/test\");\n    socket.on(\"newnumber\", data => this.addDataPoint(data));\n  }\n\n\n  addDataPoint(data){\n    if(data.sensorSerial == this.props.match.params.sensorId){\n      var newData = this.state.data.slice(0)\n\n      console.log(data.dateTime)\n      newData.push(data.number)\n\n      if(newData.length > 50){\n        newData.shift()\n      }\n\n      this.setState({\n        data: newData\n      })\n    }\n  }\n\n\n  render() {\n    // const {data} = this.state;\n\n    const plotOptions = {\n      series: {\n        pointStart: 2010\n      }\n    }\n\n    return (\n      <div className=\"graph\">\n\n\n        <HighchartsChart plotOptions={plotOptions}>\n          <Chart />\n\n          <Title>Sensor Data</Title>\n\n          <Legend layout=\"vertical\" align=\"right\" verticalAlign=\"middle\" >\n            <Legend.Title>Legend</Legend.Title>\n          </Legend>\n\n          <XAxis type=\"datetime\">\n            <XAxis.Title>Time</XAxis.Title>\n          </XAxis>\n\n          <YAxis>\n            <YAxis.Title>Y-axis</YAxis.Title>\n            <LineSeries name=\"Channel 1\" data={[1,2,3,4,5]}/>\n          </YAxis>\n        </HighchartsChart>\n      </div>\n    );\n  }\n}\n\nexport default withHighcharts(Graph, Highcharts);\n"]},"metadata":{},"sourceType":"module"}