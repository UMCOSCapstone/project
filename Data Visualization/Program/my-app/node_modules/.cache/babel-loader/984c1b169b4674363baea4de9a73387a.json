{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid/v4';\nimport { isFunction } from 'lodash-es';\nimport { attempt } from 'lodash-es';\nimport { Provider } from '../AxisContext';\nimport addEventProps, { getNonEventHandlerProps } from '../../utils/events';\nimport getModifiedProps from '../../utils/getModifiedProps';\nimport { validAxisTypes } from '../../utils/propTypeValidators';\nimport { logZAxisErrorMessage } from '../../utils/warnings';\n\nvar Axis =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Axis, _Component);\n\n  function Axis(props) {\n    var _this;\n\n    _classCallCheck(this, Axis);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Axis).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getAxisConfig\", function () {\n      var _this$props = _this.props,\n          id = _this$props.id,\n          children = _this$props.children,\n          rest = _objectWithoutProperties(_this$props, [\"id\", \"children\"]);\n\n      var axisId = isFunction(id) ? id() : id;\n      var nonEventProps = getNonEventHandlerProps(rest);\n      return _objectSpread({\n        id: axisId,\n        title: {\n          text: null\n        }\n      }, nonEventProps);\n    });\n\n    if (process.env.NODE_ENV === 'development') {\n      var id = props.id,\n          getHighcharts = props.getHighcharts;\n      if (id === 'zAxis' && !getHighcharts().ZAxis) logZAxisErrorMessage();\n    }\n\n    return _this;\n  }\n\n  _createClass(Axis, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          id = _this$props2.id,\n          dynamicAxis = _this$props2.dynamicAxis,\n          isX = _this$props2.isX,\n          getChart = _this$props2.getChart;\n      var chart = getChart(); // Create Highcharts Axis\n\n      var opts = this.getAxisConfig();\n\n      if (dynamicAxis) {\n        this.axis = chart.addAxis(opts, isX, true);\n      } else {\n        // ZAxis cannot be added dynamically, Maps only have a single axes - update instead\n        var axisId = isFunction(id) ? id() : id;\n        this.axis = chart.get(axisId);\n        this.axis.update(opts, true);\n      }\n\n      var update = this.axis.update.bind(this.axis);\n      addEventProps(update, this.props); // Re-render to pass this.axis to Provider\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var modifiedProps = getModifiedProps(prevProps, this.props);\n\n      if (modifiedProps !== false) {\n        this.axis.update(modifiedProps);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.axis.remove) {\n        // Axis may have already been removed, i.e. when Chart unmounted\n        attempt(this.axis.remove.bind(this.axis));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.axis) return null;\n      return React.createElement(Provider, {\n        value: this.axis\n      }, this.props.children);\n    }\n  }]);\n\n  return Axis;\n}(Component);\n\n_defineProperty(Axis, \"defaultProps\", {\n  id: uuid,\n  children: null,\n  dynamicAxis: true\n});\n\nexport default Axis;","map":null,"metadata":{},"sourceType":"module"}