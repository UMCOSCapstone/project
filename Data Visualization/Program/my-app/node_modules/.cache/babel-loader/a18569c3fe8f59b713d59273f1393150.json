{"ast":null,"code":"import _classCallCheck from \"/Users/jacob/Desktop/ftdl/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jacob/Desktop/ftdl/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jacob/Desktop/ftdl/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jacob/Desktop/ftdl/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jacob/Desktop/ftdl/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jacob/Desktop/ftdl/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jacob/Desktop/ftdl/my-app/src/pages/Graph.js\";\nimport React, { Component } from 'react';\nimport Highcharts from 'highcharts';\nimport { HighchartsChart, Chart, withHighcharts, XAxis, YAxis, Title, Legend, LineSeries } from 'react-jsx-highcharts';\n\nvar Graph =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Graph, _Component);\n\n  function Graph(props) {\n    var _this;\n\n    _classCallCheck(this, Graph);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Graph).call(this, props));\n    _this.updateLiveData = _this.updateLiveData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStartLiveUpdate = _this.handleStartLiveUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStopLiveUpdate = _this.handleStopLiveUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    var now = Date.now();\n    _this.state = {\n      data1: createRandomData(now),\n      data2: createRandomData(now),\n      liveUpdate: false\n    };\n    return _this;\n  }\n\n  _createClass(Graph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleStartLiveUpdate();\n    }\n  }, {\n    key: \"updateLiveData\",\n    value: function updateLiveData() {\n      var _this$state = this.state,\n          data1 = _this$state.data1,\n          data2 = _this$state.data2;\n      this.setState({\n        data1: addDataPoint(data1),\n        data2: addDataPoint(data2)\n      });\n    }\n  }, {\n    key: \"handleStartLiveUpdate\",\n    value: function handleStartLiveUpdate(e) {\n      e && e.preventDefault();\n      this.setState({\n        liveUpdate: window.setInterval(this.updateLiveData, 1000)\n      });\n    }\n  }, {\n    key: \"handleStopLiveUpdate\",\n    value: function handleStopLiveUpdate(e) {\n      e.preventDefault();\n      window.clearInterval(this.state.liveUpdate);\n      this.setState({\n        liveUpdate: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          data1 = _this$state2.data1,\n          data2 = _this$state2.data2;\n      return React.createElement(HighchartsChart, {\n        plotOptions: plotOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Solar Employment Growth by Sector, 2010-2016\"), React.createElement(Subtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Source: thesolarfoundation.com\"), React.createElement(Legend, {\n        layout: \"vertical\",\n        align: \"right\",\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(XAxis.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Time\")), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(YAxis.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Number of employees\"), React.createElement(LineSeries, {\n        name: \"Installation\",\n        data: [43934, 52503, 57177, 69658, 97031, 119931, 137133, 154175],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(LineSeries, {\n        name: \"Manufacturing\",\n        data: [24916, 24064, 29742, 29851, 32490, 30282, 38121, 40434],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(LineSeries, {\n        name: \"Sales & Distribution\",\n        data: [11744, 17722, 16005, 19771, 20185, 24377, 32147, 39387],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(LineSeries, {\n        name: \"Project Development\",\n        data: [null, null, 7988, 12169, 15112, 22452, 34400, 34227],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(LineSeries, {\n        name: \"Other\",\n        data: [12908, 5948, 8105, 11248, 8989, 11816, 18274, 18111],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Graph;\n}(Component);\n\nexport default Graph;","map":{"version":3,"sources":["/Users/jacob/Desktop/ftdl/my-app/src/pages/Graph.js"],"names":["React","Component","Highcharts","HighchartsChart","Chart","withHighcharts","XAxis","YAxis","Title","Legend","LineSeries","Graph","props","updateLiveData","bind","handleStartLiveUpdate","handleStopLiveUpdate","now","Date","state","data1","createRandomData","data2","liveUpdate","setState","addDataPoint","e","preventDefault","window","setInterval","clearInterval","plotOptions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Highcharts from 'highcharts';\nimport {\n  HighchartsChart, Chart, withHighcharts, XAxis, YAxis, Title, Legend, LineSeries\n} from 'react-jsx-highcharts';\n\nclass Graph extends Component {\n\n  constructor(props){\n    super(props)\n\n    this.updateLiveData = this.updateLiveData.bind(this);\n    this.handleStartLiveUpdate = this.handleStartLiveUpdate.bind(this);\n    this.handleStopLiveUpdate = this.handleStopLiveUpdate.bind(this);\n\n    const now = Date.now();\n    this.state = {\n      data1: createRandomData(now),\n      data2: createRandomData(now),\n      liveUpdate: false\n    };\n\n  }\n\n  componentDidMount () {\n    this.handleStartLiveUpdate();\n  }\n\n  updateLiveData () {\n    const { data1, data2 } = this.state;\n\n    this.setState({\n      data1: addDataPoint(data1),\n      data2: addDataPoint(data2)\n    });\n  }\n\n  handleStartLiveUpdate (e) {\n    e && e.preventDefault();\n    this.setState({\n      liveUpdate: window.setInterval(this.updateLiveData, 1000)\n    });\n  }\n\n  handleStopLiveUpdate (e) {\n    e.preventDefault();\n    window.clearInterval(this.state.liveUpdate);\n    this.setState({\n      liveUpdate: false\n    });\n  }\n\n\n  render() {\n\n    const { data1, data2 } = this.state;\n\n    return (\n      <HighchartsChart plotOptions={plotOptions}>\n      <Chart />\n\n      <Title>Solar Employment Growth by Sector, 2010-2016</Title>\n\n      <Subtitle>Source: thesolarfoundation.com</Subtitle>\n\n      <Legend layout=\"vertical\" align=\"right\" verticalAlign=\"middle\" />\n\n      <XAxis>\n        <XAxis.Title>Time</XAxis.Title>\n      </XAxis>\n\n      <YAxis>\n        <YAxis.Title>Number of employees</YAxis.Title>\n        <LineSeries name=\"Installation\" data={[43934, 52503, 57177, 69658, 97031, 119931, 137133, 154175]} />\n        <LineSeries name=\"Manufacturing\" data={[24916, 24064, 29742, 29851, 32490, 30282, 38121, 40434]} />\n        <LineSeries name=\"Sales & Distribution\" data={[11744, 17722, 16005, 19771, 20185, 24377, 32147, 39387]} />\n        <LineSeries name=\"Project Development\" data={[null, null, 7988, 12169, 15112, 22452, 34400, 34227]} />\n        <LineSeries name=\"Other\" data={[12908, 5948, 8105, 11248, 8989, 11816, 18274, 18111]} />\n      </YAxis>\n    </HighchartsChart>\n    );\n  }\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}