{"ast":null,"code":"var _jsxFileName = \"/Users/jacob/Documents/newnewcapstone/project/Data Visualization/Program/my-app/src/pages/Status.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nvar CustomTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 700\n    },\n    row: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default\n      }\n    }\n  };\n};\n\nvar id = 0;\n\nfunction createData(category, info) {\n  id += 1;\n  return {\n    id: id,\n    category: category,\n    info: info\n  };\n}\n\nvar rows = [createData(\"Data Received (Past Hour)\", \"854.12 MB\"), createData(\"Previous Sync\", \"Nov 12, 2018 - 14 - 01 - 05 UTC\"), createData(\"Available Space(Primary)\", \"160.42 GB Remaining\"), createData(\"Raw Data(Primary)\", \"9.43 GB Total\"), createData(\"Temp Data(Primary)\", \"22.34 GB Total\"), createData(\"Available Space(Secondary)\", \"299.34 GB Total\"), createData(\"Processed Data(Secondary)\", \"299.34 GB Total\"), createData(\"Backup Directory\", \"/var/backup/external\"), createData(\"Available Space(Backup)\", \"160.42 GB Total\"), createData(\"Raw Data(Backup)\", \"9.34 GB Total\"), createData(\"Processed Data(Backup)\", \"299.34 GB Total\")];\n\nfunction CustomizedTable(props) {\n  var classes = props.classes;\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(CustomTableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"CATEGORY\"), React.createElement(CustomTableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"INFO\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, rows.map(function (row) {\n    return React.createElement(TableRow, {\n      className: classes.row,\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(CustomTableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, row.category), React.createElement(CustomTableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, row.info));\n  }))));\n}\n\nCustomizedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CustomizedTable);","map":{"version":3,"sources":["/Users/jacob/Documents/newnewcapstone/project/Data Visualization/Program/my-app/src/pages/Status.js"],"names":["React","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","CustomTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","styles","root","width","marginTop","spacing","unit","overflowX","table","minWidth","row","background","default","id","createData","category","info","rows","CustomizedTable","props","classes","map","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n});\n\nlet id = 0;\nfunction createData(category, info) {\n  id += 1;\n  return {id, category, info};\n}\n\nconst rows = [\n  createData(\"Data Received (Past Hour)\", \"854.12 MB\"),\n  createData(\"Previous Sync\", \"Nov 12, 2018 - 14 - 01 - 05 UTC\"),\n  createData(\"Available Space(Primary)\", \"160.42 GB Remaining\"),\n  createData(\"Raw Data(Primary)\", \"9.43 GB Total\"),\n  createData(\"Temp Data(Primary)\", \"22.34 GB Total\"),\n  createData(\"Available Space(Secondary)\", \"299.34 GB Total\"),\n  createData(\"Processed Data(Secondary)\", \"299.34 GB Total\"),\n  createData(\"Backup Directory\", \"/var/backup/external\"),\n  createData(\"Available Space(Backup)\", \"160.42 GB Total\"),\n  createData(\"Raw Data(Backup)\", \"9.34 GB Total\"),\n  createData(\"Processed Data(Backup)\", \"299.34 GB Total\")\n];\n\nfunction CustomizedTable(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <CustomTableCell>CATEGORY</CustomTableCell>\n            <CustomTableCell align=\"left\">INFO</CustomTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow className={classes.row} key={row.id}>\n              <CustomTableCell component=\"th\" scope=\"row\">\n                {row.category}\n              </CustomTableCell>\n              <CustomTableCell align=\"left\">{row.info}</CustomTableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nCustomizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomizedTable);\n"]},"metadata":{},"sourceType":"module"}