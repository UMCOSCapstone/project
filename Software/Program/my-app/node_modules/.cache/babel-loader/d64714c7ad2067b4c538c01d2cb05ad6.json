{"ast":null,"code":"import _classCallCheck from \"/Users/jacob/Desktop/ftdl/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jacob/Desktop/ftdl/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jacob/Desktop/ftdl/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jacob/Desktop/ftdl/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jacob/Desktop/ftdl/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jacob/Desktop/ftdl/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jacob/Desktop/ftdl/my-app/src/pages/Graph.js\";\nimport React, { Component } from 'react';\nimport Highcharts from 'highcharts';\nimport { HighchartsChart, Chart, withHighcharts, XAxis, YAxis, Title, Legend, LineSeries } from 'react-jsx-highcharts';\n\nvar Graph =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Graph, _Component);\n\n  function Graph(props) {\n    var _this;\n\n    _classCallCheck(this, Graph);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Graph).call(this, props));\n    _this.updateLiveData = _this.updateLiveData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStartLiveUpdate = _this.handleStartLiveUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStopLiveUpdate = _this.handleStopLiveUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    var now = Date.now();\n    _this.state = {\n      data1: createRandomData(now),\n      data2: createRandomData(now),\n      liveUpdate: false\n    };\n    return _this;\n  }\n\n  _createClass(Graph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleStartLiveUpdate();\n    }\n  }, {\n    key: \"updateLiveData\",\n    value: function updateLiveData() {\n      var _this$state = this.state,\n          data1 = _this$state.data1,\n          data2 = _this$state.data2;\n      this.setState({\n        data1: addDataPoint(data1),\n        data2: addDataPoint(data2)\n      });\n    }\n  }, {\n    key: \"handleStartLiveUpdate\",\n    value: function handleStartLiveUpdate(e) {\n      e && e.preventDefault();\n      this.setState({\n        liveUpdate: window.setInterval(this.updateLiveData, 1000)\n      });\n    }\n  }, {\n    key: \"handleStopLiveUpdate\",\n    value: function handleStopLiveUpdate(e) {\n      e.preventDefault();\n      window.clearInterval(this.state.liveUpdate);\n      this.setState({\n        liveUpdate: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          data1 = _this$state2.data1,\n          data2 = _this$state2.data2;\n      return React.createElement(HighchartsChart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Dynamically updating data\"), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Legend.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Legend\")), React.createElement(XAxis, {\n        type: \"datetime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(XAxis.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Time\")), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(YAxis.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Pressure (m)\"), React.createElement(LineSeries, {\n        name: \"Sensor 1\",\n        data: data1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(LineSeries, {\n        name: \"Sensor 2\",\n        data: data2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Graph;\n}(Component);\n\nexport default Graph;","map":{"version":3,"sources":["/Users/jacob/Desktop/ftdl/my-app/src/pages/Graph.js"],"names":["React","Component","Highcharts","HighchartsChart","Chart","withHighcharts","XAxis","YAxis","Title","Legend","LineSeries","Graph","props","updateLiveData","bind","handleStartLiveUpdate","handleStopLiveUpdate","now","Date","state","data1","createRandomData","data2","liveUpdate","setState","addDataPoint","e","preventDefault","window","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Highcharts from 'highcharts';\nimport {\n  HighchartsChart, Chart, withHighcharts, XAxis, YAxis, Title, Legend, LineSeries\n} from 'react-jsx-highcharts';\n\nclass Graph extends Component {\n\n  constructor(props){\n    super(props)\n\n    this.updateLiveData = this.updateLiveData.bind(this);\n    this.handleStartLiveUpdate = this.handleStartLiveUpdate.bind(this);\n    this.handleStopLiveUpdate = this.handleStopLiveUpdate.bind(this);\n\n    const now = Date.now();\n    this.state = {\n      data1: createRandomData(now),\n      data2: createRandomData(now),\n      liveUpdate: false\n    };\n\n  }\n\n  componentDidMount () {\n    this.handleStartLiveUpdate();\n  }\n\n  updateLiveData () {\n    const { data1, data2 } = this.state;\n\n    this.setState({\n      data1: addDataPoint(data1),\n      data2: addDataPoint(data2)\n    });\n  }\n\n  handleStartLiveUpdate (e) {\n    e && e.preventDefault();\n    this.setState({\n      liveUpdate: window.setInterval(this.updateLiveData, 1000)\n    });\n  }\n\n  handleStopLiveUpdate (e) {\n    e.preventDefault();\n    window.clearInterval(this.state.liveUpdate);\n    this.setState({\n      liveUpdate: false\n    });\n  }\n\n\n  render() {\n\n    const { data1, data2 } = this.state;\n\n    return (\n      <HighchartsChart>\n          <Chart />\n\n          <Title>Dynamically updating data</Title>\n\n          <Legend>\n            <Legend.Title>Legend</Legend.Title>\n          </Legend>\n\n          <XAxis type=\"datetime\">\n            <XAxis.Title>Time</XAxis.Title>\n          </XAxis>\n\n          <YAxis>\n            <YAxis.Title>Pressure (m)</YAxis.Title>\n            <LineSeries name=\"Sensor 1\" data={data1} />\n            <LineSeries name=\"Sensor 2\" data={data2} />\n          </YAxis>\n        </HighchartsChart>\n    );\n  }\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}